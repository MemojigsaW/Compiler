Only src and CMakeLists.txt required
build for commandline testing
cmake-build-debug for clion debugging
tests for test cases
mkdir build cd build make for separate build

Set up:

PATH=$HOME/ece467/prefix/bin:$PATH
path variable is changed, do nto use default cmake, change to right
/prefix/cmake
/prefix/c++
in setting

Location Tracking:
make_node function takes care of location of the node 

Scanner:
    yytext is char sequence from scanner buffer
    yyleng is the length of the token match
    pick up string by casting it 
        std::string{yytext, static_cast<size_t>(yyleng)}


AST:
node types keep track of necessary information, receive from grammar 
and build tree in bison (.y) with $$...$ references. Create name for each node 
for printing purposes. Make printing sequential for all right now. 

    Operators:
        Saved as std::string 

    Var:
        Since there is no calculation in AST (Lab3) no point of saving the value 
        as it is not updated

    expr:
        The expr produces different node depending on the production. There is 
        no evluation of clauses (Lab 3), only constant check. 



Cpp Classes:
Inheritance:
    Parent:
        Declaring chid with parent class is viable
    Virtual:
        virtual function does not need to be defined in child
        pure virtaul (=0) needs to be defined in child 


